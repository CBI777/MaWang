//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.2.0
//     from Assets/Script/InputRelated/Inputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Inputs : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Inputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Inputs"",
    ""maps"": [
        {
            ""name"": ""Main"",
            ""id"": ""636db95e-37bb-47c0-a29c-9c6807f17f0e"",
            ""actions"": [
                {
                    ""name"": ""attack"",
                    ""type"": ""Button"",
                    ""id"": ""d67cfc91-af56-4ea2-b637-da835cdb64c5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""escape"",
                    ""type"": ""Button"",
                    ""id"": ""70eb4ca5-acd7-427b-9e38-96e278e8784b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""move"",
                    ""type"": ""PassThrough"",
                    ""id"": ""4ddf5a04-550f-400d-bb72-cb8ddb3926ef"",
                    ""expectedControlType"": ""Stick"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""item_1"",
                    ""type"": ""Button"",
                    ""id"": ""d615c941-3b3e-45e4-8a8a-14154403f960"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""item_2"",
                    ""type"": ""Button"",
                    ""id"": ""db7845fd-af38-45b3-9d7a-9512db9650db"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""item_3"",
                    ""type"": ""Button"",
                    ""id"": ""08885977-7fb1-407f-8215-2544c09a3556"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""item_scroll"",
                    ""type"": ""PassThrough"",
                    ""id"": ""3553fdad-694f-4eee-9436-ac4de1b2bfeb"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""move_up"",
                    ""type"": ""Button"",
                    ""id"": ""9a7ec9fb-670b-4013-92d4-d11982401082"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""move_down"",
                    ""type"": ""Button"",
                    ""id"": ""697610df-01c2-454a-ab50-561fecf97116"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""move_left"",
                    ""type"": ""Button"",
                    ""id"": ""2030a697-fd2f-4716-a766-883642cb8f85"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""move_right"",
                    ""type"": ""Button"",
                    ""id"": ""d86cc61a-3e12-48c8-9892-a912c994b6ca"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""4972d5c9-f2a3-4381-b14d-8a295eb314b3"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Desktop"",
                    ""action"": ""attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f8e050bb-64f9-4630-9c26-18e58095677a"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Desktop"",
                    ""action"": ""escape"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""3d2d57e4-f5ba-413c-a0c7-0805f393535c"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""710380a8-4608-4971-bed3-452ebae0379d"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""c36c0df4-7d22-489c-844e-d32162127eda"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""fa9aca7a-4c03-4690-8918-ef078e28999e"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""5d5f2ae7-d5e9-47c4-95de-91056864cf0b"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""c976f98e-23e3-4e6b-a699-64409eac8508"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""item_1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ba628e69-f96a-43c8-9344-9fe9aaa64866"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""item_2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3f2779ef-e825-4250-bcbb-95383b184c9b"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""item_3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ac6af3b6-be91-49e1-9a68-33471a76d916"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""item_scroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d4c0f845-fbbe-4390-ba19-b9f03c50c5db"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move_up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4d761ee0-a749-4c9d-9e28-32aedb2f92b6"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move_up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""488ac95f-ab03-47d6-82c1-ab262a2c8089"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move_down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""59163117-3eed-4ac7-b7d7-d0b90139bc5d"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move_down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""881df7ad-2160-4415-b0fd-f9fbbbc7f63a"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move_left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""91b18eb5-431a-45f6-b9ce-20d104afd0c0"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move_left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""09f3589e-43da-4898-93e2-6530243116c3"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move_right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2ab3b846-5102-4098-b000-5ef316609872"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move_right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Desktop"",
            ""bindingGroup"": ""Desktop"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<VirtualMouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Main
        m_Main = asset.FindActionMap("Main", throwIfNotFound: true);
        m_Main_attack = m_Main.FindAction("attack", throwIfNotFound: true);
        m_Main_escape = m_Main.FindAction("escape", throwIfNotFound: true);
        m_Main_move = m_Main.FindAction("move", throwIfNotFound: true);
        m_Main_item_1 = m_Main.FindAction("item_1", throwIfNotFound: true);
        m_Main_item_2 = m_Main.FindAction("item_2", throwIfNotFound: true);
        m_Main_item_3 = m_Main.FindAction("item_3", throwIfNotFound: true);
        m_Main_item_scroll = m_Main.FindAction("item_scroll", throwIfNotFound: true);
        m_Main_move_up = m_Main.FindAction("move_up", throwIfNotFound: true);
        m_Main_move_down = m_Main.FindAction("move_down", throwIfNotFound: true);
        m_Main_move_left = m_Main.FindAction("move_left", throwIfNotFound: true);
        m_Main_move_right = m_Main.FindAction("move_right", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Main
    private readonly InputActionMap m_Main;
    private IMainActions m_MainActionsCallbackInterface;
    private readonly InputAction m_Main_attack;
    private readonly InputAction m_Main_escape;
    private readonly InputAction m_Main_move;
    private readonly InputAction m_Main_item_1;
    private readonly InputAction m_Main_item_2;
    private readonly InputAction m_Main_item_3;
    private readonly InputAction m_Main_item_scroll;
    private readonly InputAction m_Main_move_up;
    private readonly InputAction m_Main_move_down;
    private readonly InputAction m_Main_move_left;
    private readonly InputAction m_Main_move_right;
    public struct MainActions
    {
        private @Inputs m_Wrapper;
        public MainActions(@Inputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @attack => m_Wrapper.m_Main_attack;
        public InputAction @escape => m_Wrapper.m_Main_escape;
        public InputAction @move => m_Wrapper.m_Main_move;
        public InputAction @item_1 => m_Wrapper.m_Main_item_1;
        public InputAction @item_2 => m_Wrapper.m_Main_item_2;
        public InputAction @item_3 => m_Wrapper.m_Main_item_3;
        public InputAction @item_scroll => m_Wrapper.m_Main_item_scroll;
        public InputAction @move_up => m_Wrapper.m_Main_move_up;
        public InputAction @move_down => m_Wrapper.m_Main_move_down;
        public InputAction @move_left => m_Wrapper.m_Main_move_left;
        public InputAction @move_right => m_Wrapper.m_Main_move_right;
        public InputActionMap Get() { return m_Wrapper.m_Main; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MainActions set) { return set.Get(); }
        public void SetCallbacks(IMainActions instance)
        {
            if (m_Wrapper.m_MainActionsCallbackInterface != null)
            {
                @attack.started -= m_Wrapper.m_MainActionsCallbackInterface.OnAttack;
                @attack.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnAttack;
                @attack.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnAttack;
                @escape.started -= m_Wrapper.m_MainActionsCallbackInterface.OnEscape;
                @escape.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnEscape;
                @escape.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnEscape;
                @move.started -= m_Wrapper.m_MainActionsCallbackInterface.OnMove;
                @move.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnMove;
                @move.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnMove;
                @item_1.started -= m_Wrapper.m_MainActionsCallbackInterface.OnItem_1;
                @item_1.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnItem_1;
                @item_1.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnItem_1;
                @item_2.started -= m_Wrapper.m_MainActionsCallbackInterface.OnItem_2;
                @item_2.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnItem_2;
                @item_2.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnItem_2;
                @item_3.started -= m_Wrapper.m_MainActionsCallbackInterface.OnItem_3;
                @item_3.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnItem_3;
                @item_3.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnItem_3;
                @item_scroll.started -= m_Wrapper.m_MainActionsCallbackInterface.OnItem_scroll;
                @item_scroll.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnItem_scroll;
                @item_scroll.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnItem_scroll;
                @move_up.started -= m_Wrapper.m_MainActionsCallbackInterface.OnMove_up;
                @move_up.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnMove_up;
                @move_up.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnMove_up;
                @move_down.started -= m_Wrapper.m_MainActionsCallbackInterface.OnMove_down;
                @move_down.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnMove_down;
                @move_down.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnMove_down;
                @move_left.started -= m_Wrapper.m_MainActionsCallbackInterface.OnMove_left;
                @move_left.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnMove_left;
                @move_left.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnMove_left;
                @move_right.started -= m_Wrapper.m_MainActionsCallbackInterface.OnMove_right;
                @move_right.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnMove_right;
                @move_right.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnMove_right;
            }
            m_Wrapper.m_MainActionsCallbackInterface = instance;
            if (instance != null)
            {
                @attack.started += instance.OnAttack;
                @attack.performed += instance.OnAttack;
                @attack.canceled += instance.OnAttack;
                @escape.started += instance.OnEscape;
                @escape.performed += instance.OnEscape;
                @escape.canceled += instance.OnEscape;
                @move.started += instance.OnMove;
                @move.performed += instance.OnMove;
                @move.canceled += instance.OnMove;
                @item_1.started += instance.OnItem_1;
                @item_1.performed += instance.OnItem_1;
                @item_1.canceled += instance.OnItem_1;
                @item_2.started += instance.OnItem_2;
                @item_2.performed += instance.OnItem_2;
                @item_2.canceled += instance.OnItem_2;
                @item_3.started += instance.OnItem_3;
                @item_3.performed += instance.OnItem_3;
                @item_3.canceled += instance.OnItem_3;
                @item_scroll.started += instance.OnItem_scroll;
                @item_scroll.performed += instance.OnItem_scroll;
                @item_scroll.canceled += instance.OnItem_scroll;
                @move_up.started += instance.OnMove_up;
                @move_up.performed += instance.OnMove_up;
                @move_up.canceled += instance.OnMove_up;
                @move_down.started += instance.OnMove_down;
                @move_down.performed += instance.OnMove_down;
                @move_down.canceled += instance.OnMove_down;
                @move_left.started += instance.OnMove_left;
                @move_left.performed += instance.OnMove_left;
                @move_left.canceled += instance.OnMove_left;
                @move_right.started += instance.OnMove_right;
                @move_right.performed += instance.OnMove_right;
                @move_right.canceled += instance.OnMove_right;
            }
        }
    }
    public MainActions @Main => new MainActions(this);
    private int m_DesktopSchemeIndex = -1;
    public InputControlScheme DesktopScheme
    {
        get
        {
            if (m_DesktopSchemeIndex == -1) m_DesktopSchemeIndex = asset.FindControlSchemeIndex("Desktop");
            return asset.controlSchemes[m_DesktopSchemeIndex];
        }
    }
    public interface IMainActions
    {
        void OnAttack(InputAction.CallbackContext context);
        void OnEscape(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnItem_1(InputAction.CallbackContext context);
        void OnItem_2(InputAction.CallbackContext context);
        void OnItem_3(InputAction.CallbackContext context);
        void OnItem_scroll(InputAction.CallbackContext context);
        void OnMove_up(InputAction.CallbackContext context);
        void OnMove_down(InputAction.CallbackContext context);
        void OnMove_left(InputAction.CallbackContext context);
        void OnMove_right(InputAction.CallbackContext context);
    }
}
